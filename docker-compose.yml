
services:
  train:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./logs:/code/logs
      #- ./checkpoints:/code/checkpoints
      # - ./input:/app/input
      - ./outputs:/code/outputs
      - ./data:/code/data      
    environment:
      - PYTHONPATH=/code
      - PYTHONUNBUFFERED=1
    # working_dir: /code
    command: python src/train.py 
    #command: python src/train.py --config-dir configs --config-name=train.yaml

  eval:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      #- .:/code # moun the entire project
      # - ./checkpoints:/code/checkpoints
      - ./logs:/code/logs
      - ./plots:/code/plots
      - ./outputs:/code/outputs
      - ./data:/code/data 
 
    environment:
      - PYTHONPATH=/code 
      - PYTHONUNBUFFERED=1
    #working_dir: /code
    #command: python src/eval.py --config-dir configs --config-name=eval.yaml
    command: python src/eval_cm.py --config-dir configs --config-name=eval.yaml
    depends_on:
      - train

    
  infer:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      #- .:/code # moun the entire project
      - ./logs:/code/logs
      - ./validation_results:/code/validation_results      
      - ./outputs:/code/outputs
      - ./data:/code/data 

    environment:
      - PYTHONPATH=/code
      - PYTHONUNBUFFERED=1
    #working_dir: /code
    command: python src/infer.py --config-dir configs --config-name=infer.yaml
    #command: python src/infer.py --config-path=code/configs --config-name=infer.yaml
    depends_on:
      - eval  

    
  testing:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      #- .:/code
      - ./cov_html:/code/cov_html  # Mount a volume forS coverage reports       
    environment:
      - PYTHONPATH=/code
      - PYTHONUNBUFFERED=1
      #working_dir: /code
    command: 
      sh -c "pip install pytest pytest-cov &&
             pytest -v --maxfail=1 --disable-warnings --cov=src --cov-report=html:/code/cov_html --cov-report=term tests/"
    
  generate_plots:
      build:
        context: .
        dockerfile: Dockerfile
      volumes:
        - ./logs:/code/logs
        - ./outputs:/code/outputs
        - ./scripts:/code/scripts
        - ./plots:/code/plots  # New volume for storing generated plots
      environment:
        - PYTHONPATH=/code
        - PYTHONUNBUFFERED=1
      command: >
        sh -c "pip install matplotlib pandas seaborn &&
              python scripts/generate_plots.py"
  generate_results:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./logs:/code/logs
      - ./outputs:/code/outputs
      - ./scripts:/code/scripts
      - ./plots:/code/plots  # Share the same plots directory
    environment:
      - PYTHONPATH=/code
      - PYTHONUNBUFFERED=1
    command: >
      sh -c "pip install matplotlib pandas seaborn pyyaml tabulate &&
             python scripts/generate_results.py"    